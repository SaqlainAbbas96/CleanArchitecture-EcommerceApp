@using Ecommerce.Application.DTOs
@using Ecommerce.Application.Extensions
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor

@{
    ViewBag.Title = "Checkout";

}

@{
    var session = HttpContextAccessor.HttpContext.Session;
    var cartItems = session.GetObjectFromJson<List<CartItemDTO>>("UserCart") ?? new List<CartItemDTO>();
}

<div class="container">
    @using (Html.BeginForm("PlaceOrder", "Cart", FormMethod.Post))
    {
        <section class="py-5 bg-light">
            <div class="container">
                <div class="row px-4 px-lg-5 py-lg-4 align-items-center">
                    <div class="col-lg-6">
                        <h1 class="h2 text-uppercase mb-0">Checkout</h1>
                    </div>
                </div>
            </div>
        </section>
        <section class="py-5">
            <h2 class="h5 text-uppercase mb-4">Billing details</h2>
            <div class="row">
                <div class="col-lg-8">
                    <form action="#">
                        <div class="row">
                            <div class="col-lg-6 form-group">
                                <label class="text-small text-uppercase" for="firstName">First name</label>
                                <input class="form-control form-control-lg" id="firstName" name="firstName" type="text" placeholder="first name" required>
                            </div>
                            <div class="col-lg-6 form-group">
                                <label class="text-small text-uppercase" for="lastName">Last name</label>
                                <input class="form-control form-control-lg" id="lastName" type="text" name="lastName" placeholder="last name" required>
                            </div>
                            <div class="col-lg-6 form-group">
                                <label class="text-small text-uppercase" for="email">Email address</label>
                                <input class="form-control form-control-lg" id="email" type="email" name="email" placeholder="saqlain@example.com" required>
                            </div>
                            <div class="col-lg-6 form-group">
                                <label class="text-small text-uppercase" for="mobileNo">Mobile Number</label>
                                <input class="form-control form-control-lg" id="mobileNo" type="tel" name="mobileNo" placeholder="mobile no" required>
                            </div>
                            <div class="col-lg-12 form-group">
                                <label class="text-small text-uppercase" for="address">Address</label>
                                <input class="form-control form-control-lg" id="address" type="text" name="address" placeholder="please add your complete address with nearest landmark" required>
                            </div>
                            <div class="col-lg-6 form-group">
                                <label class="text-small text-uppercase" for="city">City</label>
                                <input class="form-control form-control-lg" id="city" type="text" name="city" placeholder="city" required>
                            </div>
                            <div class="col-lg-6 form-group">
                                <label class="text-small text-uppercase" for="province">Province</label>
                                <input class="form-control form-control-lg" id="province" type="text" name="province" placeholder="state/province">
                            </div>
                            <div class="col-lg-6 form-group">
                                <label class="text-small text-uppercase" for="postalCode">Postal Code</label>
                                <input class="form-control form-control-lg" id="postalCode" type="text" name="postalCode" placeholder="postal code" required>
                            </div>
                            <div class="col-lg-6 form-group">
                                <label class="text-small text-uppercase" for="country">Country</label>
                                <input class="form-control form-control-lg" id="country" name="country" type="text" placeholder="country" required>
                            </div>

                            <div class="col-lg-6 form-group">
                                <label class="text-small text-uppercase" for="notes">Notes</label>
                                <input class="form-control form-control-lg" id="notes" name="notes" type="text" placeholder="notes" required>
                            </div>

                            <div class="col-lg-12 form-group">
                                <button class="btn btn-dark" type="submit">Place order</button>
                            </div>
                        </div>
                    </form>
                </div>

                <div class="col-lg-4">
                    <div class="card border-0 rounded-0 p-lg-4 bg-light">
                        <div class="card-body">
                            <h5 class="text-uppercase mb-4">Your order</h5>
                            <ul class="list-unstyled mb-0">
                                @{
                                    double deliveryCharges = 50;
                                    double discount = 0.0;
                                    double totalAmount = 0.0;
                                }
                                @foreach (var item in cartItems)
                                {
                                    // Calculate the total price without discount
                                    double totalPrice = item.retailPrice * item.quantity;

                                    // Calculate the discount amount
                                    double discountAmount = totalPrice * (item.discount / 100);

                                    if (discountAmount > 0)
                                    {
                                        // Apply discount
                                        double discountedTotal = totalPrice - discountAmount;
                                        discount += discountAmount;
                                        totalPrice = discountedTotal;
                                        totalAmount += totalPrice;
                                    }
                                    else
                                    {
                                        totalAmount += totalPrice;
                                    }

                                    <li class="d-flex align-items-center justify-content-between">
                                        <strong class="small font-weight-bold">@item.productName</strong>
                                    </li>
                                }

                                @foreach (var sessionItem in cartItems)
                                {
                                    int lineTotal = Convert.ToInt32(sessionItem.quantity * sessionItem.retailPrice);

                                    <li class="align-items-center" style="text-align: right;">
                                        <span class="text-muted small">@lineTotal</span>
                                    </li>
                                }

                                <li class="d-flex align-items-center justify-content-between"><strong class="text-uppercase small font-weight-bold">Total Discount</strong><span class="text-muted small">@discount</span></li>
                                <li class="d-flex align-items-center justify-content-between"><strong class="text-uppercase small font-weight-bold">Shipping</strong><span class="text-muted small">@deliveryCharges</span></li>
                                <li class="border-bottom my-2"></li>
                                @{
                                    // Add delivery charges
                                    totalAmount = totalAmount + deliveryCharges;

                                    @Html.Hidden("discount", discount)
                                    @Html.Hidden("deliveryCharges", deliveryCharges)
                                    @Html.Hidden("totalAmount", totalAmount)
                                }

                                <li class="d-flex align-items-center justify-content-between"><strong class="text-uppercase small font-weight-bold">Total</strong><span>@totalAmount</span></li>
                            </ul>
                        </div>
                    </div>

                    <br />
                    <br />                <br />
                    <div class="card border-0 rounded-0 p-lg-4 bg-light">
                        <div class="card-body">
                            <h5 class="text-uppercase mb-4">Payment Method</h5>
                            @Html.DropDownList("PaymentTypeId", ViewBag.PayMethod as SelectList, "Select a Payment", htmlAttributes: new { @class = "form-control", style = "width:270px; color=black;", required = "required" })
                        </div>
                    </div>
                </div>
            </div>
        </section>
    }
</div>